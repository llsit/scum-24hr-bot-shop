// Welcome Pack Configuration and Functions
// ----------------------------------------------

// Welcome pack items configuration
export const WELCOME_PACK_ITEMS = [
  { spawnCommand: "#SpawnItem BP_Bandage", name: "Bandage", description: "‡∏ú‡πâ‡∏≤‡∏û‡∏±‡∏ô‡πÅ‡∏ú‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ö‡∏≤‡∏î‡πÅ‡∏ú‡∏•" },
  { spawnCommand: "#SpawnItem BP_WaterBottle", name: "Water Bottle", description: "‡∏Ç‡∏ß‡∏î‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°" },
  { spawnCommand: "#SpawnItem BP_TunaCan", name: "Tuna Can", description: "‡∏õ‡∏•‡∏≤‡∏ó‡∏π‡∏ô‡πà‡∏≤‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ" },
  { spawnCommand: "#SpawnItem BP_Apple", name: "Apple", description: "‡πÅ‡∏≠‡∏õ‡πÄ‡∏õ‡∏¥‡πâ‡∏• ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏™‡∏î" },
  { spawnCommand: "#SpawnItem BP_Compass", name: "Compass", description: "‡πÄ‡∏Ç‡πá‡∏°‡∏ó‡∏¥‡∏®‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏≥‡∏ó‡∏≤‡∏á" },
  { spawnCommand: "#SpawnItem BP_Flashlight", name: "Flashlight", description: "‡πÑ‡∏ü‡∏â‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏∑‡∏î" },
  { spawnCommand: "#SpawnItem BP_Matches", name: "Matches", description: "‡πÑ‡∏°‡πâ‡∏Ç‡∏µ‡∏î‡πÑ‡∏ü‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏∏‡∏î‡πÑ‡∏ü" },
  { spawnCommand: "#SpawnItem BP_Knife", name: "Knife", description: "‡∏°‡∏µ‡∏î‡∏û‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ" }
];

// Function to send welcome pack to a player
export async function sendWelcomePack(steamId, discordId, db, safeRconSend) {
  try {
    // Check if user already received welcome pack
    return new Promise((resolve, reject) => {
      db.get("SELECT welcomePackReceived FROM users WHERE discordId = ?", [discordId], async (err, row) => {
        if (err) {
          reject(err);
          return;
        }
        
        if (row && row.welcomePackReceived) {
          reject(new Error("User already received welcome pack"));
          return;
        }
        
        // Send all welcome pack items
        for (const item of WELCOME_PACK_ITEMS) {
          const command = `${item.spawnCommand} ${steamId}`;
          try {
            await safeRconSend(command);
            // Add small delay between items
            await new Promise(resolve => setTimeout(resolve, 100));
          } catch (e) {
            console.error(`Failed to send ${item.name}:`, e);
          }
        }
        
        // Mark as received
        db.run("UPDATE users SET welcomePackReceived = 1 WHERE discordId = ?", [discordId], (updateErr) => {
          if (updateErr) {
            console.error("Failed to update welcome pack status:", updateErr);
          }
        });
        
        resolve();
      });
    });
  } catch (e) {
    throw e;
  }
}

// Function to handle welcome pack command
export async function handleWelcomeCommand(msg, db, safeRconSend) {
  return new Promise((resolve, reject) => {
    db.get("SELECT steamId, welcomePackReceived FROM users WHERE discordId = ?", [msg.author.id], async (getErr, row) => {
      if (getErr || !row) {
        reject("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");
        return;
      }
      if (!row.steamId) {
        reject("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏π‡∏Å SteamID ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !link <SteamID>");
        return;
      }
      if (row.welcomePackReceived) {
        reject("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Welcome Pack ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!");
        return;
      }
      
      try {
        await sendWelcomePack(row.steamId, msg.author.id, db, safeRconSend);
        const welcomeMessage = "üéÅ **Welcome Pack ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!**\n\n**‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:**\n" + 
          WELCOME_PACK_ITEMS.map(item => `‚Ä¢ ${item.name} - ${item.description}`).join('\n') +
          "\n\n**‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤!** üéâ";
        resolve(welcomeMessage);
      } catch (sendErr) {
        console.error("Welcome pack send failed:", sendErr);
        if (sendErr.message === "User already received welcome pack") {
          reject("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Welcome Pack ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!");
        } else {
          reject("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á Welcome Pack ‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
        }
      }
    });
  });
}

// Function to get welcome pack info
export function getWelcomePackInfo() {
  return {
    items: WELCOME_PACK_ITEMS,
    description: "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö Welcome Pack ‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!welcome`",
    itemList: WELCOME_PACK_ITEMS.map(item => `‚Ä¢ **${item.name}** - ${item.description}`).join('\n')
  };
}
